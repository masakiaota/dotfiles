// 既定値を上書きするには、このファイル内にキー バインドを挿入します
//dirは/Users/{ユーザー名}/Library/Application Support/Code/User
[
    //選択
    {
        "key": "shift+ctrl+n",
        "command": "cursorDownSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+ctrl+p",
        "command": "cursorUpSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+ctrl+f",
        "command": "cursorRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+ctrl+b",
        "command": "cursorLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+ctrl+e",
        "command": "cursorEndSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+ctrl+a",
        "command": "cursorHomeSelect",
        "when": "editorTextFocus"
    },
    //+altで単語横移動
    {
        "key": "ctrl+alt+f",
        "command": "cursorWordEndRight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+b",
        "command": "cursorWordEndLeft",
        "when": "editorTextFocus"
    },
    //altを抑えるのが辛いので,.を割り振ってみたけど意外といいのでは？
    {
        "key": "ctrl+.",
        "command": "cursorWordEndRight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+,",
        "command": "cursorWordEndLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+.",
        "command": "cursorWordEndRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+,",
        "command": "cursorWordEndLeftSelect",
        "when": "editorTextFocus"
    },


    //+altでつかみ縦移動
    {
        "key": "ctrl+alt+p",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+n",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },

    //視点移動
    {
        "key": "cmd+up",
        "command": "scrollPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "scrollLineDown",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+down",
        "command": "scrollPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "scrollLineUp",
        "when": "textInputFocus"
    },

    //vimlikeな置換
    {
        "key": "ctrl+/",
        "command": "editor.action.startFindReplaceAction",
        "when":""
    },
    //vscode vimの一部のコマンドがconflictするので無効化
    {
        "key": "ctrl+a",
        "command": "-extension.vim_ctrl+a",
        "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
    },
    {
        "key": "ctrl+e",
        "command": "-extension.vim_ctrl+e",
        "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
    },
    {
        "key": "ctrl+f",
        "command": "-extension.vim_ctrl+f",
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl"
    },
    {
        "key": "ctrl+d",
        "command": "-extension.vim_ctrl+d",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "ctrl+b",
        "command": "-extension.vim_ctrl+b",
        "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
    },
]